
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000c96  00000d2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  0080012c  0080012c  00000d56  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001570  00000000  00000000  00000f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b58  00000000  00000000  00002470  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a67  00000000  00000000  00002fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  00003a30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068e  00000000  00000000  00003d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000926  00000000  00000000  0000439a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004cc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e9       	ldi	r30, 0x96	; 150
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 32       	cpi	r26, 0x2C	; 44
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e2       	ldi	r26, 0x2C	; 44
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 36       	cpi	r26, 0x64	; 100
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 4b 04 	call	0x896	; 0x896 <main>
  9e:	0c 94 49 06 	jmp	0xc92	; 0xc92 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SCH_Add_Task>:
  a6:	0f 93       	push	r16
  a8:	1f 93       	push	r17
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	8c 01       	movw	r16, r24
  b0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <SCH_tasks_G>
  b4:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <SCH_tasks_G+0x1>
  b8:	89 2b       	or	r24, r25
  ba:	81 f0       	breq	.+32     	; 0xdc <SCH_Add_Task+0x36>
  bc:	ee e2       	ldi	r30, 0x2E	; 46
  be:	f1 e0       	ldi	r31, 0x01	; 1
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	82 2f       	mov	r24, r18
  c6:	e9 01       	movw	r28, r18
  c8:	a7 81       	ldd	r26, Z+7	; 0x07
  ca:	b0 85       	ldd	r27, Z+8	; 0x08
  cc:	2f 5f       	subi	r18, 0xFF	; 255
  ce:	3f 4f       	sbci	r19, 0xFF	; 255
  d0:	37 96       	adiw	r30, 0x07	; 7
  d2:	ab 2b       	or	r26, r27
  d4:	b9 f7       	brne	.-18     	; 0xc4 <SCH_Add_Task+0x1e>
  d6:	85 30       	cpi	r24, 0x05	; 5
  d8:	21 f4       	brne	.+8      	; 0xe2 <SCH_Add_Task+0x3c>
  da:	15 c0       	rjmp	.+42     	; 0x106 <SCH_Add_Task+0x60>
  dc:	c0 e0       	ldi	r28, 0x00	; 0
  de:	d0 e0       	ldi	r29, 0x00	; 0
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	fe 01       	movw	r30, r28
  e4:	ee 0f       	add	r30, r30
  e6:	ff 1f       	adc	r31, r31
  e8:	ee 0f       	add	r30, r30
  ea:	ff 1f       	adc	r31, r31
  ec:	ee 0f       	add	r30, r30
  ee:	ff 1f       	adc	r31, r31
  f0:	ec 1b       	sub	r30, r28
  f2:	fd 0b       	sbc	r31, r29
  f4:	e2 5d       	subi	r30, 0xD2	; 210
  f6:	fe 4f       	sbci	r31, 0xFE	; 254
  f8:	11 83       	std	Z+1, r17	; 0x01
  fa:	00 83       	st	Z, r16
  fc:	73 83       	std	Z+3, r23	; 0x03
  fe:	62 83       	std	Z+2, r22	; 0x02
 100:	55 83       	std	Z+5, r21	; 0x05
 102:	44 83       	std	Z+4, r20	; 0x04
 104:	16 82       	std	Z+6, r1	; 0x06
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	1f 91       	pop	r17
 10c:	0f 91       	pop	r16
 10e:	08 95       	ret

00000110 <SCH_Delete_Task>:
 110:	27 e0       	ldi	r18, 0x07	; 7
 112:	82 9f       	mul	r24, r18
 114:	c0 01       	movw	r24, r0
 116:	11 24       	eor	r1, r1
 118:	fc 01       	movw	r30, r24
 11a:	e2 5d       	subi	r30, 0xD2	; 210
 11c:	fe 4f       	sbci	r31, 0xFE	; 254
 11e:	11 82       	std	Z+1, r1	; 0x01
 120:	10 82       	st	Z, r1
 122:	13 82       	std	Z+3, r1	; 0x03
 124:	12 82       	std	Z+2, r1	; 0x02
 126:	15 82       	std	Z+5, r1	; 0x05
 128:	14 82       	std	Z+4, r1	; 0x04
 12a:	16 82       	std	Z+6, r1	; 0x06
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	08 95       	ret

00000130 <SCH_Dispatch_Tasks>:
 130:	ef 92       	push	r14
 132:	ff 92       	push	r15
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ce e2       	ldi	r28, 0x2E	; 46
 13c:	d1 e0       	ldi	r29, 0x01	; 1
 13e:	10 e0       	ldi	r17, 0x00	; 0
 140:	8e 81       	ldd	r24, Y+6	; 0x06
 142:	88 23       	and	r24, r24
 144:	79 f0       	breq	.+30     	; 0x164 <SCH_Dispatch_Tasks+0x34>
 146:	e8 81       	ld	r30, Y
 148:	f9 81       	ldd	r31, Y+1	; 0x01
 14a:	30 97       	sbiw	r30, 0x00	; 0
 14c:	59 f0       	breq	.+22     	; 0x164 <SCH_Dispatch_Tasks+0x34>
 14e:	09 95       	icall
 150:	8e 81       	ldd	r24, Y+6	; 0x06
 152:	81 50       	subi	r24, 0x01	; 1
 154:	8e 83       	std	Y+6, r24	; 0x06
 156:	8c 81       	ldd	r24, Y+4	; 0x04
 158:	9d 81       	ldd	r25, Y+5	; 0x05
 15a:	89 2b       	or	r24, r25
 15c:	19 f4       	brne	.+6      	; 0x164 <SCH_Dispatch_Tasks+0x34>
 15e:	81 2f       	mov	r24, r17
 160:	0e 94 88 00 	call	0x110	; 0x110 <SCH_Delete_Task>
 164:	1f 5f       	subi	r17, 0xFF	; 255
 166:	27 96       	adiw	r28, 0x07	; 7
 168:	15 30       	cpi	r17, 0x05	; 5
 16a:	51 f7       	brne	.-44     	; 0x140 <SCH_Dispatch_Tasks+0x10>
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	1f 91       	pop	r17
 172:	ff 90       	pop	r15
 174:	ef 90       	pop	r14
 176:	08 95       	ret

00000178 <SCH_Init_T1>:
 178:	cf 93       	push	r28
 17a:	c0 e0       	ldi	r28, 0x00	; 0
 17c:	8c 2f       	mov	r24, r28
 17e:	0e 94 88 00 	call	0x110	; 0x110 <SCH_Delete_Task>
 182:	cf 5f       	subi	r28, 0xFF	; 255
 184:	c5 30       	cpi	r28, 0x05	; 5
 186:	d1 f7       	brne	.-12     	; 0x17c <SCH_Init_T1+0x4>
 188:	81 e7       	ldi	r24, 0x71	; 113
 18a:	92 e0       	ldi	r25, 0x02	; 2
 18c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 190:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 194:	8c e0       	ldi	r24, 0x0C	; 12
 196:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <SCH_Start>:
 1a4:	78 94       	sei
 1a6:	08 95       	ret

000001a8 <__vector_11>:
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	2f 93       	push	r18
 1b4:	3f 93       	push	r19
 1b6:	8f 93       	push	r24
 1b8:	9f 93       	push	r25
 1ba:	af 93       	push	r26
 1bc:	bf 93       	push	r27
 1be:	ef 93       	push	r30
 1c0:	ff 93       	push	r31
 1c2:	ee e2       	ldi	r30, 0x2E	; 46
 1c4:	f1 e0       	ldi	r31, 0x01	; 1
 1c6:	21 e5       	ldi	r18, 0x51	; 81
 1c8:	31 e0       	ldi	r19, 0x01	; 1
 1ca:	80 81       	ld	r24, Z
 1cc:	91 81       	ldd	r25, Z+1	; 0x01
 1ce:	89 2b       	or	r24, r25
 1d0:	91 f0       	breq	.+36     	; 0x1f6 <__vector_11+0x4e>
 1d2:	82 81       	ldd	r24, Z+2	; 0x02
 1d4:	93 81       	ldd	r25, Z+3	; 0x03
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	59 f4       	brne	.+22     	; 0x1f0 <__vector_11+0x48>
 1da:	86 81       	ldd	r24, Z+6	; 0x06
 1dc:	8f 5f       	subi	r24, 0xFF	; 255
 1de:	86 83       	std	Z+6, r24	; 0x06
 1e0:	84 81       	ldd	r24, Z+4	; 0x04
 1e2:	95 81       	ldd	r25, Z+5	; 0x05
 1e4:	00 97       	sbiw	r24, 0x00	; 0
 1e6:	39 f0       	breq	.+14     	; 0x1f6 <__vector_11+0x4e>
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	93 83       	std	Z+3, r25	; 0x03
 1ec:	82 83       	std	Z+2, r24	; 0x02
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <__vector_11+0x4e>
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	93 83       	std	Z+3, r25	; 0x03
 1f4:	82 83       	std	Z+2, r24	; 0x02
 1f6:	37 96       	adiw	r30, 0x07	; 7
 1f8:	e2 17       	cp	r30, r18
 1fa:	f3 07       	cpc	r31, r19
 1fc:	31 f7       	brne	.-52     	; 0x1ca <__vector_11+0x22>
 1fe:	ff 91       	pop	r31
 200:	ef 91       	pop	r30
 202:	bf 91       	pop	r27
 204:	af 91       	pop	r26
 206:	9f 91       	pop	r25
 208:	8f 91       	pop	r24
 20a:	3f 91       	pop	r19
 20c:	2f 91       	pop	r18
 20e:	0f 90       	pop	r0
 210:	0f be       	out	0x3f, r0	; 63
 212:	0f 90       	pop	r0
 214:	1f 90       	pop	r1
 216:	18 95       	reti

00000218 <USART_receive>:
{
	x -= 48;
	y -= 48;
	unsigned pow = 10;
	return (y * pow) + x;
}
 218:	e0 ec       	ldi	r30, 0xC0	; 192
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	88 23       	and	r24, r24
 220:	ec f7       	brge	.-6      	; 0x21c <USART_receive+0x4>
 222:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 226:	08 95       	ret

00000228 <USART_send>:
 228:	e0 ec       	ldi	r30, 0xC0	; 192
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	90 81       	ld	r25, Z
 22e:	95 ff       	sbrs	r25, 5
 230:	fd cf       	rjmp	.-6      	; 0x22c <USART_send+0x4>
 232:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 236:	08 95       	ret

00000238 <USART_putstring>:
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	ec 01       	movw	r28, r24
 23e:	88 81       	ld	r24, Y
 240:	88 23       	and	r24, r24
 242:	31 f0       	breq	.+12     	; 0x250 <USART_putstring+0x18>
 244:	21 96       	adiw	r28, 0x01	; 1
 246:	0e 94 14 01 	call	0x228	; 0x228 <USART_send>
 24a:	89 91       	ld	r24, Y+
 24c:	81 11       	cpse	r24, r1
 24e:	fb cf       	rjmp	.-10     	; 0x246 <USART_putstring+0xe>
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	08 95       	ret

00000256 <read_adc>:
 256:	ec e7       	ldi	r30, 0x7C	; 124
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	90 81       	ld	r25, Z
 25c:	90 7f       	andi	r25, 0xF0	; 240
 25e:	90 83       	st	Z, r25
 260:	90 81       	ld	r25, Z
 262:	89 2b       	or	r24, r25
 264:	80 83       	st	Z, r24
 266:	ea e7       	ldi	r30, 0x7A	; 122
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	80 64       	ori	r24, 0x40	; 64
 26e:	80 83       	st	Z, r24
 270:	80 81       	ld	r24, Z
 272:	86 fd       	sbrc	r24, 6
 274:	fd cf       	rjmp	.-6      	; 0x270 <read_adc+0x1a>
 276:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 27a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 27e:	08 95       	ret

00000280 <temperature>:
 280:	8e e0       	ldi	r24, 0x0E	; 14
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	0e 94 2b 01 	call	0x256	; 0x256 <read_adc>
 28e:	bc 01       	movw	r22, r24
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__floatunsisf>
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	40 e8       	ldi	r20, 0x80	; 128
 29e:	5a e3       	ldi	r21, 0x3A	; 58
 2a0:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	40 ea       	ldi	r20, 0xA0	; 160
 2aa:	50 e4       	ldi	r21, 0x40	; 64
 2ac:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	40 e0       	ldi	r20, 0x00	; 0
 2b6:	5f e3       	ldi	r21, 0x3F	; 63
 2b8:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__subsf3>
 2bc:	20 e0       	ldi	r18, 0x00	; 0
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	48 ec       	ldi	r20, 0xC8	; 200
 2c2:	52 e4       	ldi	r21, 0x42	; 66
 2c4:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 2c8:	0e 94 c4 04 	call	0x988	; 0x988 <__fixunssfsi>
 2cc:	dc 01       	movw	r26, r24
 2ce:	cb 01       	movw	r24, r22
 2d0:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <adc_value+0x1>
 2d4:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <adc_value>
 2d8:	4a e0       	ldi	r20, 0x0A	; 10
 2da:	6f e5       	ldi	r22, 0x5F	; 95
 2dc:	71 e0       	ldi	r23, 0x01	; 1
 2de:	0e 94 0c 06 	call	0xc18	; 0xc18 <__itoa_ncheck>
 2e2:	8f e5       	ldi	r24, 0x5F	; 95
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 2ea:	86 e1       	ldi	r24, 0x16	; 22
 2ec:	91 e0       	ldi	r25, 0x01	; 1
 2ee:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 2f2:	08 95       	ret

000002f4 <ldr>:
 2f4:	89 e1       	ldi	r24, 0x19	; 25
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0e 94 2b 01 	call	0x256	; 0x256 <read_adc>
 302:	bc 01       	movw	r22, r24
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__floatunsisf>
 30c:	20 e0       	ldi	r18, 0x00	; 0
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	40 e8       	ldi	r20, 0x80	; 128
 312:	5a e3       	ldi	r21, 0x3A	; 58
 314:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	48 ec       	ldi	r20, 0xC8	; 200
 31e:	52 e4       	ldi	r21, 0x42	; 66
 320:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 ec       	ldi	r20, 0xC0	; 192
 32a:	5f e3       	ldi	r21, 0x3F	; 63
 32c:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 330:	0e 94 c4 04 	call	0x988	; 0x988 <__fixunssfsi>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22
 338:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <adc_value+0x1>
 33c:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <adc_value>
 340:	4a e0       	ldi	r20, 0x0A	; 10
 342:	61 e5       	ldi	r22, 0x51	; 81
 344:	71 e0       	ldi	r23, 0x01	; 1
 346:	0e 94 0c 06 	call	0xc18	; 0xc18 <__itoa_ncheck>
 34a:	81 e5       	ldi	r24, 0x51	; 81
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 352:	86 e1       	ldi	r24, 0x16	; 22
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 35a:	08 95       	ret

0000035c <distance>:
 35c:	80 e2       	ldi	r24, 0x20	; 32
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 364:	5b 9a       	sbi	0x0b, 3	; 11
 366:	85 e3       	ldi	r24, 0x35	; 53
 368:	8a 95       	dec	r24
 36a:	f1 f7       	brne	.-4      	; 0x368 <distance+0xc>
 36c:	00 00       	nop
 36e:	5b 98       	cbi	0x0b, 3	; 11
 370:	4a 9b       	sbis	0x09, 2	; 9
 372:	fe cf       	rjmp	.-4      	; 0x370 <distance+0x14>
 374:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 378:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 37c:	4a 99       	sbic	0x09, 2	; 9
 37e:	fe cf       	rjmp	.-4      	; 0x37c <distance+0x20>
 380:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 384:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__floatunsisf>
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	40 e8       	ldi	r20, 0x80	; 128
 396:	5e e3       	ldi	r21, 0x3E	; 62
 398:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 39c:	0e 94 bd 04 	call	0x97a	; 0x97a <__fixsfsi>
 3a0:	dc 01       	movw	r26, r24
 3a2:	cb 01       	movw	r24, r22
 3a4:	4a e0       	ldi	r20, 0x0A	; 10
 3a6:	6a e5       	ldi	r22, 0x5A	; 90
 3a8:	71 e0       	ldi	r23, 0x01	; 1
 3aa:	0e 94 0c 06 	call	0xc18	; 0xc18 <__itoa_ncheck>
 3ae:	8a e5       	ldi	r24, 0x5A	; 90
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 3b6:	86 e1       	ldi	r24, 0x16	; 22
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	0e 94 1c 01 	call	0x238	; 0x238 <USART_putstring>
 3be:	08 95       	ret

000003c0 <distanceStill>:
 3c0:	5b 9a       	sbi	0x0b, 3	; 11
 3c2:	85 e3       	ldi	r24, 0x35	; 53
 3c4:	8a 95       	dec	r24
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <distanceStill+0x4>
 3c8:	00 00       	nop
 3ca:	5b 98       	cbi	0x0b, 3	; 11
 3cc:	4a 9b       	sbis	0x09, 2	; 9
 3ce:	fe cf       	rjmp	.-4      	; 0x3cc <distanceStill+0xc>
 3d0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3d4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 3d8:	4a 99       	sbic	0x09, 2	; 9
 3da:	fe cf       	rjmp	.-4      	; 0x3d8 <distanceStill+0x18>
 3dc:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 3e0:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__floatunsisf>
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	40 e8       	ldi	r20, 0x80	; 128
 3f2:	5e e3       	ldi	r21, 0x3E	; 62
 3f4:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 3f8:	0e 94 bd 04 	call	0x97a	; 0x97a <__fixsfsi>
 3fc:	dc 01       	movw	r26, r24
 3fe:	cb 01       	movw	r24, r22
 400:	4a e0       	ldi	r20, 0x0A	; 10
 402:	6a e5       	ldi	r22, 0x5A	; 90
 404:	71 e0       	ldi	r23, 0x01	; 1
 406:	0e 94 0c 06 	call	0xc18	; 0xc18 <__itoa_ncheck>
 40a:	08 95       	ret

0000040c <upDown>:
 40c:	0f 93       	push	r16
 40e:	1f 93       	push	r17
 410:	cf 93       	push	r28
 412:	df 93       	push	r29
 414:	81 e5       	ldi	r24, 0x51	; 81
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	0e 94 ee 05 	call	0xbdc	; 0xbdc <atoi>
 41c:	ec 01       	movw	r28, r24
 41e:	8f e5       	ldi	r24, 0x5F	; 95
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	0e 94 ee 05 	call	0xbdc	; 0xbdc <atoi>
 426:	8c 01       	movw	r16, r24
 428:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <distanceStill>
 42c:	8a e5       	ldi	r24, 0x5A	; 90
 42e:	91 e0       	ldi	r25, 0x01	; 1
 430:	0e 94 ee 05 	call	0xbdc	; 0xbdc <atoi>
 434:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 438:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 43c:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <distance_up+0x1>
 440:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <distance_up>
 444:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <LDR_down>
 448:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <LDR_down+0x1>
 44c:	c4 17       	cp	r28, r20
 44e:	d5 07       	cpc	r29, r21
 450:	3c f4       	brge	.+14     	; 0x460 <upDown+0x54>
 452:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <temp_down>
 456:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <temp_down+0x1>
 45a:	04 17       	cp	r16, r20
 45c:	15 07       	cpc	r17, r21
 45e:	3c f0       	brlt	.+14     	; 0x46e <upDown+0x62>
 460:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <__data_end>
 464:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <__data_end+0x1>
 468:	45 2b       	or	r20, r21
 46a:	71 f0       	breq	.+28     	; 0x488 <upDown+0x7c>
 46c:	6c c0       	rjmp	.+216    	; 0x546 <upDown+0x13a>
 46e:	a9 01       	movw	r20, r18
 470:	4f 5f       	subi	r20, 0xFF	; 255
 472:	5f 4f       	sbci	r21, 0xFF	; 255
 474:	48 17       	cp	r20, r24
 476:	59 07       	cpc	r21, r25
 478:	34 f5       	brge	.+76     	; 0x4c6 <upDown+0xba>
 47a:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <__data_end>
 47e:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <__data_end+0x1>
 482:	45 2b       	or	r20, r21
 484:	09 f4       	brne	.+2      	; 0x488 <upDown+0x7c>
 486:	66 c0       	rjmp	.+204    	; 0x554 <upDown+0x148>
 488:	2a 98       	cbi	0x05, 2	; 5
 48a:	28 9a       	sbi	0x05, 0	; 5
 48c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <distance_down>
 490:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <distance_down+0x1>
 494:	28 17       	cp	r18, r24
 496:	39 07       	cpc	r19, r25
 498:	0c f0       	brlt	.+2      	; 0x49c <upDown+0x90>
 49a:	7b c0       	rjmp	.+246    	; 0x592 <upDown+0x186>
 49c:	29 9a       	sbi	0x05, 1	; 5
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	81 ee       	ldi	r24, 0xE1	; 225
 4a2:	94 e0       	ldi	r25, 0x04	; 4
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <upDown+0x98>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <upDown+0xa2>
 4ae:	00 00       	nop
 4b0:	29 98       	cbi	0x05, 1	; 5
 4b2:	2f ef       	ldi	r18, 0xFF	; 255
 4b4:	81 ee       	ldi	r24, 0xE1	; 225
 4b6:	94 e0       	ldi	r25, 0x04	; 4
 4b8:	21 50       	subi	r18, 0x01	; 1
 4ba:	80 40       	sbci	r24, 0x00	; 0
 4bc:	90 40       	sbci	r25, 0x00	; 0
 4be:	e1 f7       	brne	.-8      	; 0x4b8 <upDown+0xac>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <upDown+0xb6>
 4c2:	00 00       	nop
 4c4:	66 c0       	rjmp	.+204    	; 0x592 <upDown+0x186>
 4c6:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <LDR_up>
 4ca:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <LDR_up+0x1>
 4ce:	4c 17       	cp	r20, r28
 4d0:	5d 07       	cpc	r21, r29
 4d2:	3c f4       	brge	.+14     	; 0x4e2 <upDown+0xd6>
 4d4:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <temp_up>
 4d8:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <temp_up+0x1>
 4dc:	40 17       	cp	r20, r16
 4de:	51 07       	cpc	r21, r17
 4e0:	3c f0       	brlt	.+14     	; 0x4f0 <upDown+0xe4>
 4e2:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <__data_end>
 4e6:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <__data_end+0x1>
 4ea:	45 2b       	or	r20, r21
 4ec:	d9 f5       	brne	.+118    	; 0x564 <upDown+0x158>
 4ee:	0d c0       	rjmp	.+26     	; 0x50a <upDown+0xfe>
 4f0:	21 50       	subi	r18, 0x01	; 1
 4f2:	31 09       	sbc	r19, r1
 4f4:	82 17       	cp	r24, r18
 4f6:	93 07       	cpc	r25, r19
 4f8:	0c f0       	brlt	.+2      	; 0x4fc <upDown+0xf0>
 4fa:	4b c0       	rjmp	.+150    	; 0x592 <upDown+0x186>
 4fc:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <__data_end>
 500:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <__data_end+0x1>
 504:	23 2b       	or	r18, r19
 506:	09 f4       	brne	.+2      	; 0x50a <upDown+0xfe>
 508:	44 c0       	rjmp	.+136    	; 0x592 <upDown+0x186>
 50a:	28 98       	cbi	0x05, 0	; 5
 50c:	2a 9a       	sbi	0x05, 2	; 5
 50e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <distance_up>
 512:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <distance_up+0x1>
 516:	82 17       	cp	r24, r18
 518:	93 07       	cpc	r25, r19
 51a:	dc f5       	brge	.+118    	; 0x592 <upDown+0x186>
 51c:	29 9a       	sbi	0x05, 1	; 5
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	81 ee       	ldi	r24, 0xE1	; 225
 522:	94 e0       	ldi	r25, 0x04	; 4
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <upDown+0x118>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <upDown+0x122>
 52e:	00 00       	nop
 530:	29 98       	cbi	0x05, 1	; 5
 532:	2f ef       	ldi	r18, 0xFF	; 255
 534:	81 ee       	ldi	r24, 0xE1	; 225
 536:	94 e0       	ldi	r25, 0x04	; 4
 538:	21 50       	subi	r18, 0x01	; 1
 53a:	80 40       	sbci	r24, 0x00	; 0
 53c:	90 40       	sbci	r25, 0x00	; 0
 53e:	e1 f7       	brne	.-8      	; 0x538 <upDown+0x12c>
 540:	00 c0       	rjmp	.+0      	; 0x542 <upDown+0x136>
 542:	00 00       	nop
 544:	26 c0       	rjmp	.+76     	; 0x592 <upDown+0x186>
 546:	a9 01       	movw	r20, r18
 548:	4f 5f       	subi	r20, 0xFF	; 255
 54a:	5f 4f       	sbci	r21, 0xFF	; 255
 54c:	48 17       	cp	r20, r24
 54e:	59 07       	cpc	r21, r25
 550:	7c f4       	brge	.+30     	; 0x570 <upDown+0x164>
 552:	9a cf       	rjmp	.-204    	; 0x488 <upDown+0x7c>
 554:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <LDR_up>
 558:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <LDR_up+0x1>
 55c:	4c 17       	cp	r20, r28
 55e:	5d 07       	cpc	r21, r29
 560:	a4 f6       	brge	.-88     	; 0x50a <upDown+0xfe>
 562:	0e c0       	rjmp	.+28     	; 0x580 <upDown+0x174>
 564:	21 50       	subi	r18, 0x01	; 1
 566:	31 09       	sbc	r19, r1
 568:	82 17       	cp	r24, r18
 56a:	93 07       	cpc	r25, r19
 56c:	74 f2       	brlt	.-100    	; 0x50a <upDown+0xfe>
 56e:	11 c0       	rjmp	.+34     	; 0x592 <upDown+0x186>
 570:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <LDR_up>
 574:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <LDR_up+0x1>
 578:	4c 17       	cp	r20, r28
 57a:	5d 07       	cpc	r21, r29
 57c:	9c f7       	brge	.-26     	; 0x564 <upDown+0x158>
 57e:	aa cf       	rjmp	.-172    	; 0x4d4 <upDown+0xc8>
 580:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <temp_up>
 584:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <temp_up+0x1>
 588:	40 17       	cp	r20, r16
 58a:	51 07       	cpc	r21, r17
 58c:	0c f0       	brlt	.+2      	; 0x590 <upDown+0x184>
 58e:	bd cf       	rjmp	.-134    	; 0x50a <upDown+0xfe>
 590:	af cf       	rjmp	.-162    	; 0x4f0 <upDown+0xe4>
 592:	df 91       	pop	r29
 594:	cf 91       	pop	r28
 596:	1f 91       	pop	r17
 598:	0f 91       	pop	r16
 59a:	08 95       	ret

0000059c <newLine>:
 59c:	8d e0       	ldi	r24, 0x0D	; 13
 59e:	0e 94 14 01 	call	0x228	; 0x228 <USART_send>
 5a2:	8a e0       	ldi	r24, 0x0A	; 10
 5a4:	0e 94 14 01 	call	0x228	; 0x228 <USART_send>
 5a8:	08 95       	ret

000005aa <combine3>:
	x -= 48;
	y -= 48;
	z -= 48;
	unsigned pow1 = 10;
	unsigned pow2 = 100;
	return (z * pow2) + (y * pow1) + x;
 5aa:	40 53       	subi	r20, 0x30	; 48
 5ac:	51 09       	sbc	r21, r1
 5ae:	e4 e6       	ldi	r30, 0x64	; 100
 5b0:	e4 9f       	mul	r30, r20
 5b2:	90 01       	movw	r18, r0
 5b4:	e5 9f       	mul	r30, r21
 5b6:	30 0d       	add	r19, r0
 5b8:	11 24       	eor	r1, r1
 5ba:	82 0f       	add	r24, r18
 5bc:	93 1f       	adc	r25, r19
 5be:	c0 97       	sbiw	r24, 0x30	; 48
 5c0:	60 53       	subi	r22, 0x30	; 48
 5c2:	71 09       	sbc	r23, r1
 5c4:	9b 01       	movw	r18, r22
 5c6:	22 0f       	add	r18, r18
 5c8:	33 1f       	adc	r19, r19
 5ca:	66 0f       	add	r22, r22
 5cc:	77 1f       	adc	r23, r23
 5ce:	66 0f       	add	r22, r22
 5d0:	77 1f       	adc	r23, r23
 5d2:	66 0f       	add	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	62 0f       	add	r22, r18
 5d8:	73 1f       	adc	r23, r19
}
 5da:	86 0f       	add	r24, r22
 5dc:	97 1f       	adc	r25, r23
 5de:	08 95       	ret

000005e0 <__vector_18>:

ISR ( USART_RX_vect )
{
 5e0:	1f 92       	push	r1
 5e2:	0f 92       	push	r0
 5e4:	0f b6       	in	r0, 0x3f	; 63
 5e6:	0f 92       	push	r0
 5e8:	11 24       	eor	r1, r1
 5ea:	2f 93       	push	r18
 5ec:	3f 93       	push	r19
 5ee:	4f 93       	push	r20
 5f0:	5f 93       	push	r21
 5f2:	6f 93       	push	r22
 5f4:	7f 93       	push	r23
 5f6:	8f 93       	push	r24
 5f8:	9f 93       	push	r25
 5fa:	af 93       	push	r26
 5fc:	bf 93       	push	r27
 5fe:	cf 93       	push	r28
 600:	df 93       	push	r29
 602:	ef 93       	push	r30
 604:	ff 93       	push	r31
	unsigned char ReceivedByte;
	ReceivedByte = UDR0 ;						// Set ReceivedByte to the received byte from the controller (GUI)
 606:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	switch(ReceivedByte)
 60a:	83 33       	cpi	r24, 0x33	; 51
 60c:	39 f1       	breq	.+78     	; 0x65c <__vector_18+0x7c>
 60e:	28 f4       	brcc	.+10     	; 0x61a <__vector_18+0x3a>
 610:	81 33       	cpi	r24, 0x31	; 49
 612:	51 f0       	breq	.+20     	; 0x628 <__vector_18+0x48>
 614:	82 33       	cpi	r24, 0x32	; 50
 616:	a9 f0       	breq	.+42     	; 0x642 <__vector_18+0x62>
 618:	c1 c0       	rjmp	.+386    	; 0x79c <__vector_18+0x1bc>
 61a:	87 33       	cpi	r24, 0x37	; 55
 61c:	09 f4       	brne	.+2      	; 0x620 <__vector_18+0x40>
 61e:	93 c0       	rjmp	.+294    	; 0x746 <__vector_18+0x166>
 620:	88 33       	cpi	r24, 0x38	; 56
 622:	09 f4       	brne	.+2      	; 0x626 <__vector_18+0x46>
 624:	aa c0       	rjmp	.+340    	; 0x77a <__vector_18+0x19a>
 626:	ba c0       	rjmp	.+372    	; 0x79c <__vector_18+0x1bc>
	{
		case '1':								// 1 = Shut the sunshade // Red
			manual = 1;
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 630:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
			distance_manual = 5;
 634:	85 e0       	ldi	r24, 0x05	; 5
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 63c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			return;
 640:	ad c0       	rjmp	.+346    	; 0x79c <__vector_18+0x1bc>
			
		case '2':								// 2 = Open the sunshade // Green
			manual = 1;
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 64a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
			distance_manual = 10;
 64e:	8a e0       	ldi	r24, 0x0A	; 10
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 656:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			return;
 65a:	a0 c0       	rjmp	.+320    	; 0x79c <__vector_18+0x1bc>
			
		case '3':								// 3 = set
			manual = 0;
 65c:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__data_end+0x1>
 660:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__data_end>
			temp_down = combine((int) USART_receive(), (int) USART_receive());
 664:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 668:	c8 2f       	mov	r28, r24
 66a:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 66e:	2c 2f       	mov	r18, r28
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	20 53       	subi	r18, 0x30	; 48
 674:	31 09       	sbc	r19, r1
 676:	a9 01       	movw	r20, r18
 678:	44 0f       	add	r20, r20
 67a:	55 1f       	adc	r21, r21
 67c:	22 0f       	add	r18, r18
 67e:	33 1f       	adc	r19, r19
 680:	22 0f       	add	r18, r18
 682:	33 1f       	adc	r19, r19
 684:	22 0f       	add	r18, r18
 686:	33 1f       	adc	r19, r19
 688:	24 0f       	add	r18, r20
 68a:	35 1f       	adc	r19, r21
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	c0 97       	sbiw	r24, 0x30	; 48
 690:	28 0f       	add	r18, r24
 692:	39 1f       	adc	r19, r25
 694:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <temp_down+0x1>
 698:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <temp_down>
			temp_up = combine((int) USART_receive(), (int) USART_receive());
 69c:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 6a0:	c8 2f       	mov	r28, r24
 6a2:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 6a6:	2c 2f       	mov	r18, r28
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	20 53       	subi	r18, 0x30	; 48
 6ac:	31 09       	sbc	r19, r1
 6ae:	a9 01       	movw	r20, r18
 6b0:	44 0f       	add	r20, r20
 6b2:	55 1f       	adc	r21, r21
 6b4:	22 0f       	add	r18, r18
 6b6:	33 1f       	adc	r19, r19
 6b8:	22 0f       	add	r18, r18
 6ba:	33 1f       	adc	r19, r19
 6bc:	22 0f       	add	r18, r18
 6be:	33 1f       	adc	r19, r19
 6c0:	24 0f       	add	r18, r20
 6c2:	35 1f       	adc	r19, r21
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	c0 97       	sbiw	r24, 0x30	; 48
 6c8:	28 0f       	add	r18, r24
 6ca:	39 1f       	adc	r19, r25
 6cc:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <temp_up+0x1>
 6d0:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <temp_up>
			LDR_down = combine((int) USART_receive(), (int) USART_receive());
 6d4:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 6d8:	c8 2f       	mov	r28, r24
 6da:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 6de:	2c 2f       	mov	r18, r28
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	20 53       	subi	r18, 0x30	; 48
 6e4:	31 09       	sbc	r19, r1
 6e6:	a9 01       	movw	r20, r18
 6e8:	44 0f       	add	r20, r20
 6ea:	55 1f       	adc	r21, r21
 6ec:	22 0f       	add	r18, r18
 6ee:	33 1f       	adc	r19, r19
 6f0:	22 0f       	add	r18, r18
 6f2:	33 1f       	adc	r19, r19
 6f4:	22 0f       	add	r18, r18
 6f6:	33 1f       	adc	r19, r19
 6f8:	24 0f       	add	r18, r20
 6fa:	35 1f       	adc	r19, r21
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	c0 97       	sbiw	r24, 0x30	; 48
 700:	28 0f       	add	r18, r24
 702:	39 1f       	adc	r19, r25
 704:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <LDR_down+0x1>
 708:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <LDR_down>
			LDR_up = combine((int) USART_receive(), (int) USART_receive());
 70c:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 710:	c8 2f       	mov	r28, r24
 712:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 716:	2c 2f       	mov	r18, r28
 718:	30 e0       	ldi	r19, 0x00	; 0
 71a:	20 53       	subi	r18, 0x30	; 48
 71c:	31 09       	sbc	r19, r1
 71e:	a9 01       	movw	r20, r18
 720:	44 0f       	add	r20, r20
 722:	55 1f       	adc	r21, r21
 724:	22 0f       	add	r18, r18
 726:	33 1f       	adc	r19, r19
 728:	22 0f       	add	r18, r18
 72a:	33 1f       	adc	r19, r19
 72c:	22 0f       	add	r18, r18
 72e:	33 1f       	adc	r19, r19
 730:	24 0f       	add	r18, r20
 732:	35 1f       	adc	r19, r21
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	c0 97       	sbiw	r24, 0x30	; 48
 738:	28 0f       	add	r18, r24
 73a:	39 1f       	adc	r19, r25
 73c:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <LDR_up+0x1>
 740:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <LDR_up>
			return;
 744:	2b c0       	rjmp	.+86     	; 0x79c <__vector_18+0x1bc>
			
		case '7':								// 7 = open/closing distance
			manual = 1;
 746:	81 e0       	ldi	r24, 0x01	; 1
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 74e:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
			int closeopen = combine3((int) USART_receive(), (int) USART_receive(), (int) USART_receive());
 752:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 756:	d8 2f       	mov	r29, r24
 758:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 75c:	c8 2f       	mov	r28, r24
 75e:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 762:	4d 2f       	mov	r20, r29
 764:	50 e0       	ldi	r21, 0x00	; 0
 766:	6c 2f       	mov	r22, r28
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <combine3>
			distance_manual = closeopen;
 770:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 774:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			return;
 778:	11 c0       	rjmp	.+34     	; 0x79c <__vector_18+0x1bc>
			
		case '8':								// 8 = set manual
			manual = (int) USART_receive();
 77a:	0e 94 0c 01 	call	0x218	; 0x218 <USART_receive>
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x1>
 784:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
			if (manual == 1)
 788:	01 97       	sbiw	r24, 0x01	; 1
 78a:	41 f4       	brne	.+16     	; 0x79c <__vector_18+0x1bc>
			{
				distance_manual = (int) atoi(distance_sensor);
 78c:	8a e5       	ldi	r24, 0x5A	; 90
 78e:	91 e0       	ldi	r25, 0x01	; 1
 790:	0e 94 ee 05 	call	0xbdc	; 0xbdc <atoi>
 794:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 798:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			return;
			}
		default:
			return;
	}
 79c:	ff 91       	pop	r31
 79e:	ef 91       	pop	r30
 7a0:	df 91       	pop	r29
 7a2:	cf 91       	pop	r28
 7a4:	bf 91       	pop	r27
 7a6:	af 91       	pop	r26
 7a8:	9f 91       	pop	r25
 7aa:	8f 91       	pop	r24
 7ac:	7f 91       	pop	r23
 7ae:	6f 91       	pop	r22
 7b0:	5f 91       	pop	r21
 7b2:	4f 91       	pop	r20
 7b4:	3f 91       	pop	r19
 7b6:	2f 91       	pop	r18
 7b8:	0f 90       	pop	r0
 7ba:	0f be       	out	0x3f, r0	; 63
 7bc:	0f 90       	pop	r0
 7be:	1f 90       	pop	r1
 7c0:	18 95       	reti

000007c2 <init_connectie>:
void init_scheduler();					// Function to initialize and add all the tasks to the scheduler
void init_LEDS();						// Function to initialize/configure the LED's

void init_connectie()
{
	UCSR0A = 0;							// disable U2X mode
 7c2:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);	// Set frame format: 8data, 2stop bit 
 7c6:	8e e0       	ldi	r24, 0x0E	; 14
 7c8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 7cc:	08 95       	ret

000007ce <init_USART>:
}

void init_USART()
{
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
 7ce:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
 7d2:	87 e6       	ldi	r24, 0x67	; 103
 7d4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);		// Enable receiver and transmitter
 7d8:	e1 ec       	ldi	r30, 0xC1	; 193
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	88 e1       	ldi	r24, 0x18	; 24
 7de:	80 83       	st	Z, r24
	UCSR0C = (3<<UCSZ00);
 7e0:	86 e0       	ldi	r24, 0x06	; 6
 7e2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B |= (1 << RXCIE0 );			// Enable the USART Receive Complete interrupt ( USART_RXC )
 7e6:	80 81       	ld	r24, Z
 7e8:	80 68       	ori	r24, 0x80	; 128
 7ea:	80 83       	st	Z, r24
	sei ();								// Enable the Global Interrupt Enable flag so that interrupts can be processed
 7ec:	78 94       	sei
 7ee:	08 95       	ret

000007f0 <init_scheduler>:
}

void init_scheduler()
{
	SCH_Init_T1();
 7f0:	0e 94 bc 00 	call	0x178	; 0x178 <SCH_Init_T1>
	SCH_Add_Task(temperature,1,100);
 7f4:	44 e6       	ldi	r20, 0x64	; 100
 7f6:	50 e0       	ldi	r21, 0x00	; 0
 7f8:	61 e0       	ldi	r22, 0x01	; 1
 7fa:	70 e0       	ldi	r23, 0x00	; 0
 7fc:	80 e4       	ldi	r24, 0x40	; 64
 7fe:	91 e0       	ldi	r25, 0x01	; 1
 800:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	SCH_Add_Task(ldr,2,100);
 804:	44 e6       	ldi	r20, 0x64	; 100
 806:	50 e0       	ldi	r21, 0x00	; 0
 808:	62 e0       	ldi	r22, 0x02	; 2
 80a:	70 e0       	ldi	r23, 0x00	; 0
 80c:	8a e7       	ldi	r24, 0x7A	; 122
 80e:	91 e0       	ldi	r25, 0x01	; 1
 810:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	SCH_Add_Task(distance,3,100);
 814:	44 e6       	ldi	r20, 0x64	; 100
 816:	50 e0       	ldi	r21, 0x00	; 0
 818:	63 e0       	ldi	r22, 0x03	; 3
 81a:	70 e0       	ldi	r23, 0x00	; 0
 81c:	8e ea       	ldi	r24, 0xAE	; 174
 81e:	91 e0       	ldi	r25, 0x01	; 1
 820:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	SCH_Add_Task(newLine,6,100);
 824:	44 e6       	ldi	r20, 0x64	; 100
 826:	50 e0       	ldi	r21, 0x00	; 0
 828:	66 e0       	ldi	r22, 0x06	; 6
 82a:	70 e0       	ldi	r23, 0x00	; 0
 82c:	8e ec       	ldi	r24, 0xCE	; 206
 82e:	92 e0       	ldi	r25, 0x02	; 2
 830:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	SCH_Add_Task(upDown,8,20);
 834:	44 e1       	ldi	r20, 0x14	; 20
 836:	50 e0       	ldi	r21, 0x00	; 0
 838:	68 e0       	ldi	r22, 0x08	; 8
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	86 e0       	ldi	r24, 0x06	; 6
 83e:	92 e0       	ldi	r25, 0x02	; 2
 840:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	SCH_Start();
 844:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <SCH_Start>
 848:	08 95       	ret

0000084a <init_adc>:
}

void init_adc()
{
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));    //16Mhz/128 = 125Khz the ADC reference clock
 84a:	ea e7       	ldi	r30, 0x7A	; 122
 84c:	f0 e0       	ldi	r31, 0x00	; 0
 84e:	80 81       	ld	r24, Z
 850:	87 60       	ori	r24, 0x07	; 7
 852:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);							 //Voltage reference from AVCC (5v)
 854:	ac e7       	ldi	r26, 0x7C	; 124
 856:	b0 e0       	ldi	r27, 0x00	; 0
 858:	8c 91       	ld	r24, X
 85a:	80 64       	ori	r24, 0x40	; 64
 85c:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);							 //Turn on ADC
 85e:	80 81       	ld	r24, Z
 860:	80 68       	ori	r24, 0x80	; 128
 862:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);							 //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
 864:	80 81       	ld	r24, Z
 866:	80 64       	ori	r24, 0x40	; 64
 868:	80 83       	st	Z, r24
 86a:	08 95       	ret

0000086c <init_dist>:
}

void init_dist()
{
	DDRD |= _BV(PD3);			// Pin 3 Trigger Output
 86c:	53 9a       	sbi	0x0a, 3	; 10
	DDRD &= ~_BV(PD2);			// Pin 2 Echo Input
 86e:	52 98       	cbi	0x0a, 2	; 10
 870:	08 95       	ret

00000872 <init_LEDS>:
}

void init_LEDS()
{ 
	DDRB |= _BV(PB0);			// pin0 B = output
 872:	20 9a       	sbi	0x04, 0	; 4
	DDRB |= _BV(PB1);			// pin1 B = output
 874:	21 9a       	sbi	0x04, 1	; 4
	DDRB |= _BV(PB2);			// pin2 B = output
 876:	22 9a       	sbi	0x04, 2	; 4
	PORTB |= (1 << PB2);		// Green LED on
 878:	2a 9a       	sbi	0x05, 2	; 5
 87a:	08 95       	ret

0000087c <setup>:
	}
}

void setup()
{
	init_connectie();
 87c:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <init_connectie>
	init_adc();				// Setup the ADC
 880:	0e 94 25 04 	call	0x84a	; 0x84a <init_adc>
	init_USART();			// Setup the USART
 884:	0e 94 e7 03 	call	0x7ce	; 0x7ce <init_USART>
	init_dist();			// Setup distance sensor
 888:	0e 94 36 04 	call	0x86c	; 0x86c <init_dist>
	init_scheduler();		// Setup scheduler
 88c:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <init_scheduler>
	init_LEDS();			// Setup LED
 890:	0e 94 39 04 	call	0x872	; 0x872 <init_LEDS>
 894:	08 95       	ret

00000896 <main>:
int main(void);
void setup();

int main(void)
{
	setup();
 896:	0e 94 3e 04 	call	0x87c	; 0x87c <setup>
	while(1) {
		SCH_Dispatch_Tasks();
 89a:	0e 94 98 00 	call	0x130	; 0x130 <SCH_Dispatch_Tasks>
 89e:	fd cf       	rjmp	.-6      	; 0x89a <main+0x4>

000008a0 <__subsf3>:
 8a0:	50 58       	subi	r21, 0x80	; 128

000008a2 <__addsf3>:
 8a2:	bb 27       	eor	r27, r27
 8a4:	aa 27       	eor	r26, r26
 8a6:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__addsf3x>
 8aa:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <__fp_round>
 8ae:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_pscA>
 8b2:	38 f0       	brcs	.+14     	; 0x8c2 <__addsf3+0x20>
 8b4:	0e 94 40 05 	call	0xa80	; 0xa80 <__fp_pscB>
 8b8:	20 f0       	brcs	.+8      	; 0x8c2 <__addsf3+0x20>
 8ba:	39 f4       	brne	.+14     	; 0x8ca <__addsf3+0x28>
 8bc:	9f 3f       	cpi	r25, 0xFF	; 255
 8be:	19 f4       	brne	.+6      	; 0x8c6 <__addsf3+0x24>
 8c0:	26 f4       	brtc	.+8      	; 0x8ca <__addsf3+0x28>
 8c2:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__fp_nan>
 8c6:	0e f4       	brtc	.+2      	; 0x8ca <__addsf3+0x28>
 8c8:	e0 95       	com	r30
 8ca:	e7 fb       	bst	r30, 7
 8cc:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>

000008d0 <__addsf3x>:
 8d0:	e9 2f       	mov	r30, r25
 8d2:	0e 94 58 05 	call	0xab0	; 0xab0 <__fp_split3>
 8d6:	58 f3       	brcs	.-42     	; 0x8ae <__addsf3+0xc>
 8d8:	ba 17       	cp	r27, r26
 8da:	62 07       	cpc	r22, r18
 8dc:	73 07       	cpc	r23, r19
 8de:	84 07       	cpc	r24, r20
 8e0:	95 07       	cpc	r25, r21
 8e2:	20 f0       	brcs	.+8      	; 0x8ec <__addsf3x+0x1c>
 8e4:	79 f4       	brne	.+30     	; 0x904 <__stack+0x5>
 8e6:	a6 f5       	brtc	.+104    	; 0x950 <__stack+0x51>
 8e8:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_zero>
 8ec:	0e f4       	brtc	.+2      	; 0x8f0 <__addsf3x+0x20>
 8ee:	e0 95       	com	r30
 8f0:	0b 2e       	mov	r0, r27
 8f2:	ba 2f       	mov	r27, r26
 8f4:	a0 2d       	mov	r26, r0
 8f6:	0b 01       	movw	r0, r22
 8f8:	b9 01       	movw	r22, r18
 8fa:	90 01       	movw	r18, r0
 8fc:	0c 01       	movw	r0, r24
 8fe:	ca 01       	movw	r24, r20
 900:	a0 01       	movw	r20, r0
 902:	11 24       	eor	r1, r1
 904:	ff 27       	eor	r31, r31
 906:	59 1b       	sub	r21, r25
 908:	99 f0       	breq	.+38     	; 0x930 <__stack+0x31>
 90a:	59 3f       	cpi	r21, 0xF9	; 249
 90c:	50 f4       	brcc	.+20     	; 0x922 <__stack+0x23>
 90e:	50 3e       	cpi	r21, 0xE0	; 224
 910:	68 f1       	brcs	.+90     	; 0x96c <__stack+0x6d>
 912:	1a 16       	cp	r1, r26
 914:	f0 40       	sbci	r31, 0x00	; 0
 916:	a2 2f       	mov	r26, r18
 918:	23 2f       	mov	r18, r19
 91a:	34 2f       	mov	r19, r20
 91c:	44 27       	eor	r20, r20
 91e:	58 5f       	subi	r21, 0xF8	; 248
 920:	f3 cf       	rjmp	.-26     	; 0x908 <__stack+0x9>
 922:	46 95       	lsr	r20
 924:	37 95       	ror	r19
 926:	27 95       	ror	r18
 928:	a7 95       	ror	r26
 92a:	f0 40       	sbci	r31, 0x00	; 0
 92c:	53 95       	inc	r21
 92e:	c9 f7       	brne	.-14     	; 0x922 <__stack+0x23>
 930:	7e f4       	brtc	.+30     	; 0x950 <__stack+0x51>
 932:	1f 16       	cp	r1, r31
 934:	ba 0b       	sbc	r27, r26
 936:	62 0b       	sbc	r22, r18
 938:	73 0b       	sbc	r23, r19
 93a:	84 0b       	sbc	r24, r20
 93c:	ba f0       	brmi	.+46     	; 0x96c <__stack+0x6d>
 93e:	91 50       	subi	r25, 0x01	; 1
 940:	a1 f0       	breq	.+40     	; 0x96a <__stack+0x6b>
 942:	ff 0f       	add	r31, r31
 944:	bb 1f       	adc	r27, r27
 946:	66 1f       	adc	r22, r22
 948:	77 1f       	adc	r23, r23
 94a:	88 1f       	adc	r24, r24
 94c:	c2 f7       	brpl	.-16     	; 0x93e <__stack+0x3f>
 94e:	0e c0       	rjmp	.+28     	; 0x96c <__stack+0x6d>
 950:	ba 0f       	add	r27, r26
 952:	62 1f       	adc	r22, r18
 954:	73 1f       	adc	r23, r19
 956:	84 1f       	adc	r24, r20
 958:	48 f4       	brcc	.+18     	; 0x96c <__stack+0x6d>
 95a:	87 95       	ror	r24
 95c:	77 95       	ror	r23
 95e:	67 95       	ror	r22
 960:	b7 95       	ror	r27
 962:	f7 95       	ror	r31
 964:	9e 3f       	cpi	r25, 0xFE	; 254
 966:	08 f0       	brcs	.+2      	; 0x96a <__stack+0x6b>
 968:	b0 cf       	rjmp	.-160    	; 0x8ca <__addsf3+0x28>
 96a:	93 95       	inc	r25
 96c:	88 0f       	add	r24, r24
 96e:	08 f0       	brcs	.+2      	; 0x972 <__stack+0x73>
 970:	99 27       	eor	r25, r25
 972:	ee 0f       	add	r30, r30
 974:	97 95       	ror	r25
 976:	87 95       	ror	r24
 978:	08 95       	ret

0000097a <__fixsfsi>:
 97a:	0e 94 c4 04 	call	0x988	; 0x988 <__fixunssfsi>
 97e:	68 94       	set
 980:	b1 11       	cpse	r27, r1
 982:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__fp_szero>
 986:	08 95       	ret

00000988 <__fixunssfsi>:
 988:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_splitA>
 98c:	88 f0       	brcs	.+34     	; 0x9b0 <__fixunssfsi+0x28>
 98e:	9f 57       	subi	r25, 0x7F	; 127
 990:	98 f0       	brcs	.+38     	; 0x9b8 <__fixunssfsi+0x30>
 992:	b9 2f       	mov	r27, r25
 994:	99 27       	eor	r25, r25
 996:	b7 51       	subi	r27, 0x17	; 23
 998:	b0 f0       	brcs	.+44     	; 0x9c6 <__fixunssfsi+0x3e>
 99a:	e1 f0       	breq	.+56     	; 0x9d4 <__fixunssfsi+0x4c>
 99c:	66 0f       	add	r22, r22
 99e:	77 1f       	adc	r23, r23
 9a0:	88 1f       	adc	r24, r24
 9a2:	99 1f       	adc	r25, r25
 9a4:	1a f0       	brmi	.+6      	; 0x9ac <__fixunssfsi+0x24>
 9a6:	ba 95       	dec	r27
 9a8:	c9 f7       	brne	.-14     	; 0x99c <__fixunssfsi+0x14>
 9aa:	14 c0       	rjmp	.+40     	; 0x9d4 <__fixunssfsi+0x4c>
 9ac:	b1 30       	cpi	r27, 0x01	; 1
 9ae:	91 f0       	breq	.+36     	; 0x9d4 <__fixunssfsi+0x4c>
 9b0:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_zero>
 9b4:	b1 e0       	ldi	r27, 0x01	; 1
 9b6:	08 95       	ret
 9b8:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_zero>
 9bc:	67 2f       	mov	r22, r23
 9be:	78 2f       	mov	r23, r24
 9c0:	88 27       	eor	r24, r24
 9c2:	b8 5f       	subi	r27, 0xF8	; 248
 9c4:	39 f0       	breq	.+14     	; 0x9d4 <__fixunssfsi+0x4c>
 9c6:	b9 3f       	cpi	r27, 0xF9	; 249
 9c8:	cc f3       	brlt	.-14     	; 0x9bc <__fixunssfsi+0x34>
 9ca:	86 95       	lsr	r24
 9cc:	77 95       	ror	r23
 9ce:	67 95       	ror	r22
 9d0:	b3 95       	inc	r27
 9d2:	d9 f7       	brne	.-10     	; 0x9ca <__fixunssfsi+0x42>
 9d4:	3e f4       	brtc	.+14     	; 0x9e4 <__fixunssfsi+0x5c>
 9d6:	90 95       	com	r25
 9d8:	80 95       	com	r24
 9da:	70 95       	com	r23
 9dc:	61 95       	neg	r22
 9de:	7f 4f       	sbci	r23, 0xFF	; 255
 9e0:	8f 4f       	sbci	r24, 0xFF	; 255
 9e2:	9f 4f       	sbci	r25, 0xFF	; 255
 9e4:	08 95       	ret

000009e6 <__floatunsisf>:
 9e6:	e8 94       	clt
 9e8:	09 c0       	rjmp	.+18     	; 0x9fc <__floatsisf+0x12>

000009ea <__floatsisf>:
 9ea:	97 fb       	bst	r25, 7
 9ec:	3e f4       	brtc	.+14     	; 0x9fc <__floatsisf+0x12>
 9ee:	90 95       	com	r25
 9f0:	80 95       	com	r24
 9f2:	70 95       	com	r23
 9f4:	61 95       	neg	r22
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255
 9f8:	8f 4f       	sbci	r24, 0xFF	; 255
 9fa:	9f 4f       	sbci	r25, 0xFF	; 255
 9fc:	99 23       	and	r25, r25
 9fe:	a9 f0       	breq	.+42     	; 0xa2a <__floatsisf+0x40>
 a00:	f9 2f       	mov	r31, r25
 a02:	96 e9       	ldi	r25, 0x96	; 150
 a04:	bb 27       	eor	r27, r27
 a06:	93 95       	inc	r25
 a08:	f6 95       	lsr	r31
 a0a:	87 95       	ror	r24
 a0c:	77 95       	ror	r23
 a0e:	67 95       	ror	r22
 a10:	b7 95       	ror	r27
 a12:	f1 11       	cpse	r31, r1
 a14:	f8 cf       	rjmp	.-16     	; 0xa06 <__floatsisf+0x1c>
 a16:	fa f4       	brpl	.+62     	; 0xa56 <__floatsisf+0x6c>
 a18:	bb 0f       	add	r27, r27
 a1a:	11 f4       	brne	.+4      	; 0xa20 <__floatsisf+0x36>
 a1c:	60 ff       	sbrs	r22, 0
 a1e:	1b c0       	rjmp	.+54     	; 0xa56 <__floatsisf+0x6c>
 a20:	6f 5f       	subi	r22, 0xFF	; 255
 a22:	7f 4f       	sbci	r23, 0xFF	; 255
 a24:	8f 4f       	sbci	r24, 0xFF	; 255
 a26:	9f 4f       	sbci	r25, 0xFF	; 255
 a28:	16 c0       	rjmp	.+44     	; 0xa56 <__floatsisf+0x6c>
 a2a:	88 23       	and	r24, r24
 a2c:	11 f0       	breq	.+4      	; 0xa32 <__floatsisf+0x48>
 a2e:	96 e9       	ldi	r25, 0x96	; 150
 a30:	11 c0       	rjmp	.+34     	; 0xa54 <__floatsisf+0x6a>
 a32:	77 23       	and	r23, r23
 a34:	21 f0       	breq	.+8      	; 0xa3e <__floatsisf+0x54>
 a36:	9e e8       	ldi	r25, 0x8E	; 142
 a38:	87 2f       	mov	r24, r23
 a3a:	76 2f       	mov	r23, r22
 a3c:	05 c0       	rjmp	.+10     	; 0xa48 <__floatsisf+0x5e>
 a3e:	66 23       	and	r22, r22
 a40:	71 f0       	breq	.+28     	; 0xa5e <__floatsisf+0x74>
 a42:	96 e8       	ldi	r25, 0x86	; 134
 a44:	86 2f       	mov	r24, r22
 a46:	70 e0       	ldi	r23, 0x00	; 0
 a48:	60 e0       	ldi	r22, 0x00	; 0
 a4a:	2a f0       	brmi	.+10     	; 0xa56 <__floatsisf+0x6c>
 a4c:	9a 95       	dec	r25
 a4e:	66 0f       	add	r22, r22
 a50:	77 1f       	adc	r23, r23
 a52:	88 1f       	adc	r24, r24
 a54:	da f7       	brpl	.-10     	; 0xa4c <__floatsisf+0x62>
 a56:	88 0f       	add	r24, r24
 a58:	96 95       	lsr	r25
 a5a:	87 95       	ror	r24
 a5c:	97 f9       	bld	r25, 7
 a5e:	08 95       	ret

00000a60 <__fp_inf>:
 a60:	97 f9       	bld	r25, 7
 a62:	9f 67       	ori	r25, 0x7F	; 127
 a64:	80 e8       	ldi	r24, 0x80	; 128
 a66:	70 e0       	ldi	r23, 0x00	; 0
 a68:	60 e0       	ldi	r22, 0x00	; 0
 a6a:	08 95       	ret

00000a6c <__fp_nan>:
 a6c:	9f ef       	ldi	r25, 0xFF	; 255
 a6e:	80 ec       	ldi	r24, 0xC0	; 192
 a70:	08 95       	ret

00000a72 <__fp_pscA>:
 a72:	00 24       	eor	r0, r0
 a74:	0a 94       	dec	r0
 a76:	16 16       	cp	r1, r22
 a78:	17 06       	cpc	r1, r23
 a7a:	18 06       	cpc	r1, r24
 a7c:	09 06       	cpc	r0, r25
 a7e:	08 95       	ret

00000a80 <__fp_pscB>:
 a80:	00 24       	eor	r0, r0
 a82:	0a 94       	dec	r0
 a84:	12 16       	cp	r1, r18
 a86:	13 06       	cpc	r1, r19
 a88:	14 06       	cpc	r1, r20
 a8a:	05 06       	cpc	r0, r21
 a8c:	08 95       	ret

00000a8e <__fp_round>:
 a8e:	09 2e       	mov	r0, r25
 a90:	03 94       	inc	r0
 a92:	00 0c       	add	r0, r0
 a94:	11 f4       	brne	.+4      	; 0xa9a <__fp_round+0xc>
 a96:	88 23       	and	r24, r24
 a98:	52 f0       	brmi	.+20     	; 0xaae <__fp_round+0x20>
 a9a:	bb 0f       	add	r27, r27
 a9c:	40 f4       	brcc	.+16     	; 0xaae <__fp_round+0x20>
 a9e:	bf 2b       	or	r27, r31
 aa0:	11 f4       	brne	.+4      	; 0xaa6 <__fp_round+0x18>
 aa2:	60 ff       	sbrs	r22, 0
 aa4:	04 c0       	rjmp	.+8      	; 0xaae <__fp_round+0x20>
 aa6:	6f 5f       	subi	r22, 0xFF	; 255
 aa8:	7f 4f       	sbci	r23, 0xFF	; 255
 aaa:	8f 4f       	sbci	r24, 0xFF	; 255
 aac:	9f 4f       	sbci	r25, 0xFF	; 255
 aae:	08 95       	ret

00000ab0 <__fp_split3>:
 ab0:	57 fd       	sbrc	r21, 7
 ab2:	90 58       	subi	r25, 0x80	; 128
 ab4:	44 0f       	add	r20, r20
 ab6:	55 1f       	adc	r21, r21
 ab8:	59 f0       	breq	.+22     	; 0xad0 <__fp_splitA+0x10>
 aba:	5f 3f       	cpi	r21, 0xFF	; 255
 abc:	71 f0       	breq	.+28     	; 0xada <__fp_splitA+0x1a>
 abe:	47 95       	ror	r20

00000ac0 <__fp_splitA>:
 ac0:	88 0f       	add	r24, r24
 ac2:	97 fb       	bst	r25, 7
 ac4:	99 1f       	adc	r25, r25
 ac6:	61 f0       	breq	.+24     	; 0xae0 <__fp_splitA+0x20>
 ac8:	9f 3f       	cpi	r25, 0xFF	; 255
 aca:	79 f0       	breq	.+30     	; 0xaea <__fp_splitA+0x2a>
 acc:	87 95       	ror	r24
 ace:	08 95       	ret
 ad0:	12 16       	cp	r1, r18
 ad2:	13 06       	cpc	r1, r19
 ad4:	14 06       	cpc	r1, r20
 ad6:	55 1f       	adc	r21, r21
 ad8:	f2 cf       	rjmp	.-28     	; 0xabe <__fp_split3+0xe>
 ada:	46 95       	lsr	r20
 adc:	f1 df       	rcall	.-30     	; 0xac0 <__fp_splitA>
 ade:	08 c0       	rjmp	.+16     	; 0xaf0 <__fp_splitA+0x30>
 ae0:	16 16       	cp	r1, r22
 ae2:	17 06       	cpc	r1, r23
 ae4:	18 06       	cpc	r1, r24
 ae6:	99 1f       	adc	r25, r25
 ae8:	f1 cf       	rjmp	.-30     	; 0xacc <__fp_splitA+0xc>
 aea:	86 95       	lsr	r24
 aec:	71 05       	cpc	r23, r1
 aee:	61 05       	cpc	r22, r1
 af0:	08 94       	sec
 af2:	08 95       	ret

00000af4 <__fp_zero>:
 af4:	e8 94       	clt

00000af6 <__fp_szero>:
 af6:	bb 27       	eor	r27, r27
 af8:	66 27       	eor	r22, r22
 afa:	77 27       	eor	r23, r23
 afc:	cb 01       	movw	r24, r22
 afe:	97 f9       	bld	r25, 7
 b00:	08 95       	ret

00000b02 <__mulsf3>:
 b02:	0e 94 94 05 	call	0xb28	; 0xb28 <__mulsf3x>
 b06:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <__fp_round>
 b0a:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_pscA>
 b0e:	38 f0       	brcs	.+14     	; 0xb1e <__mulsf3+0x1c>
 b10:	0e 94 40 05 	call	0xa80	; 0xa80 <__fp_pscB>
 b14:	20 f0       	brcs	.+8      	; 0xb1e <__mulsf3+0x1c>
 b16:	95 23       	and	r25, r21
 b18:	11 f0       	breq	.+4      	; 0xb1e <__mulsf3+0x1c>
 b1a:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>
 b1e:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__fp_nan>
 b22:	11 24       	eor	r1, r1
 b24:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__fp_szero>

00000b28 <__mulsf3x>:
 b28:	0e 94 58 05 	call	0xab0	; 0xab0 <__fp_split3>
 b2c:	70 f3       	brcs	.-36     	; 0xb0a <__mulsf3+0x8>

00000b2e <__mulsf3_pse>:
 b2e:	95 9f       	mul	r25, r21
 b30:	c1 f3       	breq	.-16     	; 0xb22 <__mulsf3+0x20>
 b32:	95 0f       	add	r25, r21
 b34:	50 e0       	ldi	r21, 0x00	; 0
 b36:	55 1f       	adc	r21, r21
 b38:	62 9f       	mul	r22, r18
 b3a:	f0 01       	movw	r30, r0
 b3c:	72 9f       	mul	r23, r18
 b3e:	bb 27       	eor	r27, r27
 b40:	f0 0d       	add	r31, r0
 b42:	b1 1d       	adc	r27, r1
 b44:	63 9f       	mul	r22, r19
 b46:	aa 27       	eor	r26, r26
 b48:	f0 0d       	add	r31, r0
 b4a:	b1 1d       	adc	r27, r1
 b4c:	aa 1f       	adc	r26, r26
 b4e:	64 9f       	mul	r22, r20
 b50:	66 27       	eor	r22, r22
 b52:	b0 0d       	add	r27, r0
 b54:	a1 1d       	adc	r26, r1
 b56:	66 1f       	adc	r22, r22
 b58:	82 9f       	mul	r24, r18
 b5a:	22 27       	eor	r18, r18
 b5c:	b0 0d       	add	r27, r0
 b5e:	a1 1d       	adc	r26, r1
 b60:	62 1f       	adc	r22, r18
 b62:	73 9f       	mul	r23, r19
 b64:	b0 0d       	add	r27, r0
 b66:	a1 1d       	adc	r26, r1
 b68:	62 1f       	adc	r22, r18
 b6a:	83 9f       	mul	r24, r19
 b6c:	a0 0d       	add	r26, r0
 b6e:	61 1d       	adc	r22, r1
 b70:	22 1f       	adc	r18, r18
 b72:	74 9f       	mul	r23, r20
 b74:	33 27       	eor	r19, r19
 b76:	a0 0d       	add	r26, r0
 b78:	61 1d       	adc	r22, r1
 b7a:	23 1f       	adc	r18, r19
 b7c:	84 9f       	mul	r24, r20
 b7e:	60 0d       	add	r22, r0
 b80:	21 1d       	adc	r18, r1
 b82:	82 2f       	mov	r24, r18
 b84:	76 2f       	mov	r23, r22
 b86:	6a 2f       	mov	r22, r26
 b88:	11 24       	eor	r1, r1
 b8a:	9f 57       	subi	r25, 0x7F	; 127
 b8c:	50 40       	sbci	r21, 0x00	; 0
 b8e:	9a f0       	brmi	.+38     	; 0xbb6 <__mulsf3_pse+0x88>
 b90:	f1 f0       	breq	.+60     	; 0xbce <__mulsf3_pse+0xa0>
 b92:	88 23       	and	r24, r24
 b94:	4a f0       	brmi	.+18     	; 0xba8 <__mulsf3_pse+0x7a>
 b96:	ee 0f       	add	r30, r30
 b98:	ff 1f       	adc	r31, r31
 b9a:	bb 1f       	adc	r27, r27
 b9c:	66 1f       	adc	r22, r22
 b9e:	77 1f       	adc	r23, r23
 ba0:	88 1f       	adc	r24, r24
 ba2:	91 50       	subi	r25, 0x01	; 1
 ba4:	50 40       	sbci	r21, 0x00	; 0
 ba6:	a9 f7       	brne	.-22     	; 0xb92 <__mulsf3_pse+0x64>
 ba8:	9e 3f       	cpi	r25, 0xFE	; 254
 baa:	51 05       	cpc	r21, r1
 bac:	80 f0       	brcs	.+32     	; 0xbce <__mulsf3_pse+0xa0>
 bae:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>
 bb2:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__fp_szero>
 bb6:	5f 3f       	cpi	r21, 0xFF	; 255
 bb8:	e4 f3       	brlt	.-8      	; 0xbb2 <__mulsf3_pse+0x84>
 bba:	98 3e       	cpi	r25, 0xE8	; 232
 bbc:	d4 f3       	brlt	.-12     	; 0xbb2 <__mulsf3_pse+0x84>
 bbe:	86 95       	lsr	r24
 bc0:	77 95       	ror	r23
 bc2:	67 95       	ror	r22
 bc4:	b7 95       	ror	r27
 bc6:	f7 95       	ror	r31
 bc8:	e7 95       	ror	r30
 bca:	9f 5f       	subi	r25, 0xFF	; 255
 bcc:	c1 f7       	brne	.-16     	; 0xbbe <__mulsf3_pse+0x90>
 bce:	fe 2b       	or	r31, r30
 bd0:	88 0f       	add	r24, r24
 bd2:	91 1d       	adc	r25, r1
 bd4:	96 95       	lsr	r25
 bd6:	87 95       	ror	r24
 bd8:	97 f9       	bld	r25, 7
 bda:	08 95       	ret

00000bdc <atoi>:
 bdc:	fc 01       	movw	r30, r24
 bde:	88 27       	eor	r24, r24
 be0:	99 27       	eor	r25, r25
 be2:	e8 94       	clt
 be4:	21 91       	ld	r18, Z+
 be6:	20 32       	cpi	r18, 0x20	; 32
 be8:	e9 f3       	breq	.-6      	; 0xbe4 <atoi+0x8>
 bea:	29 30       	cpi	r18, 0x09	; 9
 bec:	10 f0       	brcs	.+4      	; 0xbf2 <atoi+0x16>
 bee:	2e 30       	cpi	r18, 0x0E	; 14
 bf0:	c8 f3       	brcs	.-14     	; 0xbe4 <atoi+0x8>
 bf2:	2b 32       	cpi	r18, 0x2B	; 43
 bf4:	41 f0       	breq	.+16     	; 0xc06 <atoi+0x2a>
 bf6:	2d 32       	cpi	r18, 0x2D	; 45
 bf8:	39 f4       	brne	.+14     	; 0xc08 <atoi+0x2c>
 bfa:	68 94       	set
 bfc:	04 c0       	rjmp	.+8      	; 0xc06 <atoi+0x2a>
 bfe:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulhi_const_10>
 c02:	82 0f       	add	r24, r18
 c04:	91 1d       	adc	r25, r1
 c06:	21 91       	ld	r18, Z+
 c08:	20 53       	subi	r18, 0x30	; 48
 c0a:	2a 30       	cpi	r18, 0x0A	; 10
 c0c:	c0 f3       	brcs	.-16     	; 0xbfe <atoi+0x22>
 c0e:	1e f4       	brtc	.+6      	; 0xc16 <atoi+0x3a>
 c10:	90 95       	com	r25
 c12:	81 95       	neg	r24
 c14:	9f 4f       	sbci	r25, 0xFF	; 255
 c16:	08 95       	ret

00000c18 <__itoa_ncheck>:
 c18:	bb 27       	eor	r27, r27
 c1a:	4a 30       	cpi	r20, 0x0A	; 10
 c1c:	31 f4       	brne	.+12     	; 0xc2a <__itoa_ncheck+0x12>
 c1e:	99 23       	and	r25, r25
 c20:	22 f4       	brpl	.+8      	; 0xc2a <__itoa_ncheck+0x12>
 c22:	bd e2       	ldi	r27, 0x2D	; 45
 c24:	90 95       	com	r25
 c26:	81 95       	neg	r24
 c28:	9f 4f       	sbci	r25, 0xFF	; 255
 c2a:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__utoa_common>

00000c2e <__mulhi_const_10>:
 c2e:	7a e0       	ldi	r23, 0x0A	; 10
 c30:	97 9f       	mul	r25, r23
 c32:	90 2d       	mov	r25, r0
 c34:	87 9f       	mul	r24, r23
 c36:	80 2d       	mov	r24, r0
 c38:	91 0d       	add	r25, r1
 c3a:	11 24       	eor	r1, r1
 c3c:	08 95       	ret

00000c3e <__utoa_ncheck>:
 c3e:	bb 27       	eor	r27, r27

00000c40 <__utoa_common>:
 c40:	fb 01       	movw	r30, r22
 c42:	55 27       	eor	r21, r21
 c44:	aa 27       	eor	r26, r26
 c46:	88 0f       	add	r24, r24
 c48:	99 1f       	adc	r25, r25
 c4a:	aa 1f       	adc	r26, r26
 c4c:	a4 17       	cp	r26, r20
 c4e:	10 f0       	brcs	.+4      	; 0xc54 <__utoa_common+0x14>
 c50:	a4 1b       	sub	r26, r20
 c52:	83 95       	inc	r24
 c54:	50 51       	subi	r21, 0x10	; 16
 c56:	b9 f7       	brne	.-18     	; 0xc46 <__utoa_common+0x6>
 c58:	a0 5d       	subi	r26, 0xD0	; 208
 c5a:	aa 33       	cpi	r26, 0x3A	; 58
 c5c:	08 f0       	brcs	.+2      	; 0xc60 <__utoa_common+0x20>
 c5e:	a9 5d       	subi	r26, 0xD9	; 217
 c60:	a1 93       	st	Z+, r26
 c62:	00 97       	sbiw	r24, 0x00	; 0
 c64:	79 f7       	brne	.-34     	; 0xc44 <__utoa_common+0x4>
 c66:	b1 11       	cpse	r27, r1
 c68:	b1 93       	st	Z+, r27
 c6a:	11 92       	st	Z+, r1
 c6c:	cb 01       	movw	r24, r22
 c6e:	0c 94 39 06 	jmp	0xc72	; 0xc72 <strrev>

00000c72 <strrev>:
 c72:	dc 01       	movw	r26, r24
 c74:	fc 01       	movw	r30, r24
 c76:	67 2f       	mov	r22, r23
 c78:	71 91       	ld	r23, Z+
 c7a:	77 23       	and	r23, r23
 c7c:	e1 f7       	brne	.-8      	; 0xc76 <strrev+0x4>
 c7e:	32 97       	sbiw	r30, 0x02	; 2
 c80:	04 c0       	rjmp	.+8      	; 0xc8a <strrev+0x18>
 c82:	7c 91       	ld	r23, X
 c84:	6d 93       	st	X+, r22
 c86:	70 83       	st	Z, r23
 c88:	62 91       	ld	r22, -Z
 c8a:	ae 17       	cp	r26, r30
 c8c:	bf 07       	cpc	r27, r31
 c8e:	c8 f3       	brcs	.-14     	; 0xc82 <strrev+0x10>
 c90:	08 95       	ret

00000c92 <_exit>:
 c92:	f8 94       	cli

00000c94 <__stop_program>:
 c94:	ff cf       	rjmp	.-2      	; 0xc94 <__stop_program>
